<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>小智 - 登录</title>
    <link rel="icon" type="image/x-icon" href="/static/favicon.ico">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #1e3a8a 0%, #0c4a6e 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }
        
        .login-container {
            background: rgba(255, 255, 255, 0.7);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
            padding: 40px;
            width: 100%;
            max-width: 450px;
            transform: translateY(0);
            transition: all 0.5s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            z-index: 10;
        }
        
        .login-container:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.4);
        }
        
        .login-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.2) 0%, rgba(255,255,255,0) 70%);
            transform: rotate(45deg);
            z-index: -1;
            transition: all 0.5s ease;
        }
        
        .login-container:hover::before {
            transform: rotate(45deg) translate(10%, 10%);
        }
        
        .login-header {
            text-align: center;
            margin-bottom: 35px;
            position: relative;
            color: #0c4a6e;
        }
        
        .login-header h2 {
            color: #0c4a6e;
            font-weight: 700;
            margin-bottom: 15px;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            font-size: 2.2rem;
        }
        
        .login-header .app-icon {
            font-size: 70px;
            color: #0369a1;
            margin-bottom: 25px;
            animation: float 3s ease-in-out infinite;
            text-shadow: 0 5px 15px rgba(14, 165, 233, 0.4);
            display: inline-block;
        }
        
        @keyframes float {
            0% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-10px) rotate(5deg); }
            100% { transform: translateY(0px) rotate(0deg); }
        }
        
        @keyframes pulse {
            0% { transform: scale(1); filter: brightness(100%); }
            50% { transform: scale(1.05); filter: brightness(110%); }
            100% { transform: scale(1); filter: brightness(100%); }
        }
        
        .form-control {
            background: rgba(255, 255, 255, 0.6);
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 50px;
            padding: 15px 20px;
            transition: all 0.3s;
            font-size: 1.1rem;
            box-shadow: 0 3px 8px rgba(0, 0, 0, 0.05);
        }
        
        .form-control:focus {
            border-color: #0ea5e9;
            box-shadow: 0 0 15px rgba(14, 165, 233, 0.3);
            transform: translateY(-2px);
        }
        
        .form-label {
            color: #0c4a6e;
            font-weight: 600;
            margin-left: 10px;
            font-size: 1.1rem;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .form-label i {
            color: #0ea5e9;
        }
        
        .input-group {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border-radius: 50px;
            transition: all 0.3s ease;
        }
        
        .input-group:focus-within {
            box-shadow: 0 8px 20px rgba(123, 44, 191, 0.2);
            transform: translateY(-2px);
        }
        
        .input-group-text {
            background: rgba(12, 74, 110, 0.8);
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 50px 0 0 50px;
            color: white;
            border: none;
            padding-left: 20px;
            padding-right: 20px;
            font-size: 1.2rem;
        }
        
        .btn-primary {
            background: linear-gradient(45deg, #0c4a6e, #0369a1);
            border: none;
            border-radius: 50px;
            padding: 15px 30px;
            font-weight: 600;
            letter-spacing: 1px;
            box-shadow: 0 8px 20px rgba(14, 165, 233, 0.4);
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
            font-size: 1.1rem;
        }
        
        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0) 100%);
            transition: all 0.5s ease;
        }
        
        .btn-primary:hover::before {
            left: 100%;
        }
        
        .btn-primary:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 25px rgba(14, 165, 233, 0.6);
            background: linear-gradient(45deg, #0369a1, #0ea5e9);
        }
        
        .welcome-text {
            position: fixed;
            top: 20px;
            left: 20px;
            color: white;
            font-size: 1.2rem;
            font-weight: 600;
            text-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
            display: flex;
            align-items: center;
            gap: 10px;
            z-index: 1000;
            padding: 10px 15px;
            background: rgba(123, 44, 191, 0.2);
            backdrop-filter: blur(5px);
            border-radius: 50px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            animation: fadeIn 1s ease-out;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        
        .welcome-text i {
            font-size: 1.5rem;
            color: #fff;
            animation: wave 2s ease-in-out infinite;
            transform-origin: 70% 70%;
        }
        
        @keyframes wave {
            0% { transform: rotate(0deg); }
            10% { transform: rotate(14deg); }
            20% { transform: rotate(-8deg); }
            30% { transform: rotate(14deg); }
            40% { transform: rotate(-4deg); }
            50% { transform: rotate(10deg); }
            60% { transform: rotate(0deg); }
            100% { transform: rotate(0deg); }
        }
        
        .background-decoration {
            position: absolute;
            width: 300px;
            height: 300px;
            background: radial-gradient(circle, rgba(157, 78, 221, 0.4) 0%, rgba(157, 78, 221, 0) 70%);
            border-radius: 50%;
            z-index: -1;
            animation: moveAround 15s linear infinite;
        }
        
        .decoration-1 {
            top: 20%;
            left: 15%;
            animation-delay: 0s;
        }
        
        .decoration-2 {
            bottom: 10%;
            right: 20%;
            width: 200px;
            height: 200px;
            animation-delay: -5s;
        }
        
        .decoration-3 {
            top: 60%;
            left: 25%;
            width: 150px;
            height: 150px;
            animation-delay: -10s;
        }
        
        @keyframes moveAround {
            0% { transform: translate(0, 0) scale(1); }
            25% { transform: translate(50px, -30px) scale(1.1); }
            50% { transform: translate(0, -60px) scale(1); }
            75% { transform: translate(-50px, -30px) scale(0.9); }
            100% { transform: translate(0, 0) scale(1); }
        }
        
        .floating-dots {
            position: absolute;
            width: 10px;
            height: 10px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.6);
            z-index: -1;
            animation: floatUp 15s linear infinite;
        }
        
        @keyframes floatUp {
            0% { transform: translateY(100vh) scale(0); opacity: 0; }
            20% { opacity: 1; }
            80% { opacity: 1; }
            100% { transform: translateY(-100vh) scale(1.5); opacity: 0; }
        }
        
        /* 生成 20 个随机漂浮点 */
        .dots-container {
            position: fixed;
            width: 100vw;
            height: 100vh;
            overflow: hidden;
            z-index: -1;
        }
        
        /* 响应式调整 */
        @media (max-width: 576px) {
            .login-container {
                padding: 30px 20px;
                margin: 0 15px;
                max-width: 90%;
            }
            
            .login-header .app-icon {
                font-size: 50px;
            }
            
            .login-header h2 {
                font-size: 1.8rem;
            }
            
            .form-control, .btn-primary {
                padding: 12px 20px;
                font-size: 1rem;
            }
            
            .background-decoration {
                opacity: 0.5;
            }
        }
        
        /* 平板尺寸 */
        @media (min-width: 577px) and (max-width: 992px) {
            .login-container {
                max-width: 70%;
            }
        }
        
        /* 验证样式 */
        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: none;
        }
        
        .invalid-feedback {
            margin-left: 15px;
            font-weight: 500;
        }
        
        /* 提示信息样式 */
        .alert {
            border-radius: 15px;
            margin-bottom: 20px;
            padding: 15px;
            animation: shake 0.5s ease-in-out;
        }
        
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
            20%, 40%, 60%, 80% { transform: translateX(5px); }
        }
        
        /* 更新错误提示模态框样式 */
        .modal-content {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(12px);
            -webkit-backdrop-filter: blur(12px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
    </style>
</head>
<body>
    <div class="welcome-text">
        <i class="fas fa-robot"></i> 小智欢迎您
    </div>
    
    <!-- 背景装饰 -->
    <div class="background-decoration decoration-1"></div>
    <div class="background-decoration decoration-2"></div>
    <div class="background-decoration decoration-3"></div>
    
    <!-- 漂浮点效果 -->
    <div class="dots-container">
        <!-- JS 将动态添加漂浮点 -->
    </div>
    
    <div class="login-container">
        <div class="login-header">
            <div class="app-icon">
                <i class="fas fa-robot"></i>
            </div>
            <h2>欢迎使用小智</h2>
            <p class="text-muted">您的智能聊天助手</p>
        </div>
        
        {% if error %}
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle me-2"></i> {{ error }}
        </div>
        {% endif %}
        
        <form method="post" id="loginForm">
            <div class="mb-4">
                <label for="username" class="form-label">
                    <i class="fas fa-user-circle"></i> 用户名
                </label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-user"></i>
                    </span>
                    <input type="text" class="form-control" id="username" name="username" required 
                           placeholder="请输入用户名">
                </div>
                <div class="invalid-feedback">请输入有效的用户名</div>
            </div>
            
            <div class="mb-4">
                <label for="password" class="form-label">
                    <i class="fas fa-key"></i> 密码
                </label>
                <div class="input-group">
                    <span class="input-group-text">
                        <i class="fas fa-lock"></i>
                    </span>
                    <input type="password" class="form-control" id="password" name="password" required 
                           placeholder="请输入密码">
                </div>
                <div class="invalid-feedback">请输入密码</div>
            </div>
            
            <div class="d-grid gap-2 mt-4">
                <button type="submit" class="btn btn-primary btn-lg">
                    <i class="fas fa-sign-in-alt me-2"></i> 登录
                </button>
            </div>
        </form>
    </div>

    <!-- 添加错误提示模态框 -->
    <div class="modal fade" id="errorModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" style="background: rgba(255, 255, 255, 0.95); backdrop-filter: blur(10px); border-radius: 20px; border: none;">
                <div class="modal-header border-0" style="background: linear-gradient(45deg, #5a189a, #7b2cbf); color: white; border-radius: 20px 20px 0 0;">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-circle me-2"></i> 登录失败
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center py-4">
                    <p class="mb-0" id="error-message" style="color: #5a189a; font-size: 1.1rem;"></p>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal" style="background: linear-gradient(45deg, #5a189a, #7b2cbf); border: none; border-radius: 50px; padding: 8px 25px;">
                        确定
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // 创建漂浮点效果
        const dotsContainer = document.querySelector('.dots-container');
        
        for (let i = 0; i < 20; i++) {
            const dot = document.createElement('div');
            dot.className = 'floating-dots';
            
            // 随机位置和大小
            const size = Math.random() * 8 + 3;
            const left = Math.random() * 100;
            
            dot.style.width = `${size}px`;
            dot.style.height = `${size}px`;
            dot.style.left = `${left}vw`;
            
            // 随机动画延迟
            const delay = Math.random() * 15;
            const duration = Math.random() * 10 + 10;
            dot.style.animationDelay = `${delay}s`;
            dot.style.animationDuration = `${duration}s`;
            
            dotsContainer.appendChild(dot);
        }
        
        // 修改表单验证和提交
        const form = document.getElementById('loginForm');
        const username = document.getElementById('username');
        const password = document.getElementById('password');
        
        form.addEventListener('submit', function(event) {
            event.preventDefault();
            let isValid = true;
            
            if (!username.value.trim()) {
                username.classList.add('is-invalid');
                isValid = false;
            } else {
                username.classList.remove('is-invalid');
            }
            
            if (!password.value.trim()) {
                password.classList.add('is-invalid');
                isValid = false;
            } else {
                password.classList.remove('is-invalid');
            }
            
            if (isValid) {
                // 发送表单数据
                fetch('/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded',
                    },
                    body: new URLSearchParams({
                        'username': username.value,
                        'password': password.value
                    })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = data.redirect;
                    } else {
                        // 显示错误模态框
                        document.getElementById('error-message').textContent = '用户名或密码错误，请稍后重试！';
                        const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
                        errorModal.show();
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('error-message').textContent = '用户名或密码错误，请稍后重试！';
                    const errorModal = new bootstrap.Modal(document.getElementById('errorModal'));
                    errorModal.show();
                });
            }
        });
        
        // 当输入字段获得焦点时移除错误状态
        username.addEventListener('focus', function() {
            this.classList.remove('is-invalid');
        });
        
        password.addEventListener('focus', function() {
            this.classList.remove('is-invalid');
        });
    </script>
</body>
</html>